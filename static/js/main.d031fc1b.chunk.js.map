{"version":3,"sources":["index.js"],"names":["Square","className","onClick","props","this","value","React","Component","Board","i","squares","renderSquare","Game","state","history","Array","fill","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"2OAIMA,G,6KACM,IAAD,OACP,OACE,4BACEC,UAAU,SACVC,QAAS,WACP,EAAKC,MAAMD,YAGZE,KAAKD,MAAME,W,GATCC,IAAMC,YAerBC,E,2KACSC,GAAI,IAAD,OACd,OACE,kBAACT,EAAD,CACEK,MAAOD,KAAKD,MAAMO,QAAQD,GAC1BP,QAAS,kBAAM,EAAKC,MAAMD,QAAQO,Q,+BAMtC,OACE,6BACE,yBAAKR,UAAU,aACZG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKV,UAAU,aACZG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,IAErB,yBAAKV,UAAU,aACZG,KAAKO,aAAa,GAClBP,KAAKO,aAAa,GAClBP,KAAKO,aAAa,S,GA1BTL,IAAMC,WAiCpBK,E,kDACJ,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDU,MAAQ,CACXC,QAAS,CACP,CACEJ,QAASK,MAAM,GAAGC,KAAK,QAG3BC,WAAY,EACZC,SAAS,GATM,E,wDAYPT,GACV,IAAMK,EAAUV,KAAKS,MAAMC,QAAQK,MAAM,EAAGf,KAAKS,MAAMI,WAAa,GAE9DP,EADUI,EAAQA,EAAQM,OAAS,GACjBV,QAAQS,QAC5BE,EAAgBX,IAAYA,EAAQD,KAGxCC,EAAQD,GAAKL,KAAKS,MAAMK,QAAU,IAAM,IACxCd,KAAKkB,SAAS,CACZR,QAASA,EAAQS,OAAO,CACtB,CACEb,QAASA,KAGbO,WAAYH,EAAQM,OACpBF,SAAUd,KAAKS,MAAMK,a,6BAGlBM,GACLpB,KAAKkB,SAAS,CACZL,WAAYO,EACZN,QAASM,EAAO,IAAM,M,+BAGhB,IAcJC,EAdG,OACDX,EAAUV,KAAKS,MAAMC,QACrBY,EAAUZ,EAAQV,KAAKS,MAAMI,YAC7BU,EAASN,EAAgBK,EAAQhB,SAEjCkB,EAAQd,EAAQe,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EAAO,+EAAqBA,EAAO,uEAChD,OACE,wBAAIE,IAAKF,GACP,4BAAQ5B,QAAS,kBAAM,EAAK+B,OAAOH,KAAQC,OAWjD,OAJEN,EADEE,EACO,mEAAmBvB,KAAKS,MAAMK,QAAU,IAAM,KAE9C,+EAAqBd,KAAKS,MAAMK,QAAU,IAAM,KAGzD,yBAAKjB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACO,EAAD,CACEE,QAASgB,EAAQhB,QACjBR,QAAS,SAACO,GAAD,OAAO,EAAKyB,YAAYzB,OAGrC,yBAAKR,UAAU,aACb,6BAAMwB,GACN,4BAAKG,S,GAnEItB,IAAMC,WA0EzB,SAASc,EAAgBX,GAWvB,IAVA,IAAMyB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA1B,EAAI,EAAGA,EAAI0B,EAAMf,OAAQX,IAAK,CAAC,IAAD,cACnB0B,EAAM1B,GADa,GAC9B2B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI5B,EAAQ0B,IAAM1B,EAAQ0B,KAAO1B,EAAQ2B,IAAM3B,EAAQ0B,KAAO1B,EAAQ4B,GACpE,OAAO5B,EAAQ0B,GAGnB,OAAO,KAKTG,IAASC,OAAO,kBAAC5B,EAAD,MAAU6B,SAASC,eAAe,W","file":"static/js/main.d031fc1b.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass Square extends React.Component {\r\n  render() {\r\n    return (\r\n      <button\r\n        className='square'\r\n        onClick={() => {\r\n          this.props.onClick();\r\n        }}\r\n      >\r\n        {this.props.value}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i]}\r\n        onClick={() => this.props.onClick(i)}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='board-row'>\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className='board-row'>\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className='board-row'>\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n        },\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n    };\r\n  }\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? 'O' : 'X';\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n        },\r\n      ]),\r\n      stepNumber: history.length,\r\n      xIsNext: !this.state.xIsNext,\r\n    });\r\n  }\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: step % 2 === 0,\r\n    });\r\n  }\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? 'Перейти к ходу #' + move : 'К началу игры';\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Выиграл ход: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    } else {\r\n      status = 'Следующий ход: ' + (this.state.xIsNext ? 'O' : 'X');\r\n    }\r\n    return (\r\n      <div className='game'>\r\n        <div className='game-board'>\r\n          <Board\r\n            squares={current.squares}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className='game-info'>\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(<Game />, document.getElementById('root'));\r\n"],"sourceRoot":""}